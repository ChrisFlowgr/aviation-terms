name: Validate Content Batches

on:
  pull_request:
    paths:
      - 'data/batches/**/*.json'
  workflow_dispatch: {}   # lets you run it manually from Actions, too

# Give the workflow permission to read code and write PR comments if needed
permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    name: Validate Glossary Batches
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # no caching here so we don't need a lock file

      # Install the bare minimum we need at runtime (no lock file required)
      - name: Install runtime deps
        run: |
          npm init -y
          npm install --no-audit --no-fund typescript ts-node zod ajv ajv-formats glob

      # Run your validator on the changed batch files.
      # If your script expects a glob, keep as is; otherwise point to the PR file path.
      - name: Validate JSON batches
        run: npx ts-node scripts/validate-batch.ts "data/batches/**/*.json"

      # OPTIONAL: leave this out if you still get permission errors.
      # With permissions set above, it should work when PR comes from a branch in the same repo.
      - name: Comment summary on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const body = "âœ… Validation ran. See logs above for pass/warn/error details.";
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });

